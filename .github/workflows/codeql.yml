#name: "CodeQL"

on:
  push:
    branches: [ trunk ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ trunk ]


jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support
        compiler:
          # you can specify the version after `-` like "llvm-13.0.0".
          - gcc-14
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Debug
        packaging_maintainer_mode:
          - ON


    steps:
    - uses: actions/checkout@v3

    - name: Setup Cache
      uses: ./.github/actions/setup_cache
      with:
        compiler: ${{ matrix.compiler }}
        build_type: ${{ matrix.build_type }}
        packaging_maintainer_mode: ${{ matrix.packaging_maintainer_mode }}
        generator: ${{ matrix.generator }}

    - name: Project Name
      uses: cardinalby/export-env-action@v2
      with:
        envFile: '.github/constants.env'


    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        compiler: ${{ matrix.compiler }}
        vcvarsall: ${{ contains(matrix.os, 'windows' )}}

        cmake: true
        ninja: true
        vcpkg: false
        ccache: true
        clangtidy: false

        cppcheck: false

        gcovr: false
        opencppcoverage: false

      # make sure coverage is only enabled for Debug builds, since it sets -O0 to make sure coverage
      # has meaningful results
    # - name: Configure CMake
    #   run: |
    #     cmake -S . -B ./build -G "${{matrix.generator}}" -DCMAKE_BUILD_TYPE:STRING=${{matrix.build_type}} -D${{ env.PROJECT_NAME }}_PACKAGING_MAINTAINER_MODE:BOOL=${{matrix.packaging_maintainer_mode}} -D${{ env.PROJECT_NAME }}_ENABLE_COVERAGE:BOOL=${{ matrix.build_type == 'Debug' }}
    - uses: threeal/cmake-action@v2
      with:
        args: --preset ${{ matrix.preset }}
        run-build: false
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - uses: threeal/cmake-action@v2
      with:
        args: --preset ${{ matrix.preset }}
        run-build: true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
