name: CMake

on:
  push:
    branches: [ "trunk" ]
  pull_request:
    branches: [ "trunk" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug] # Kept original Debug, can be expanded later
        include:
          - build_type: Debug
            name: Build Debug (Ninja) # Simplified name
            cmake_generator_flags: -G Ninja

    name: ${{ matrix.name }}
    runs-on: ubuntu-latest # Job runs on an ubuntu-latest host

    container:
      image: ghcr.io/${{ github.repository_owner }}/pointilism/pointilsynth-build-env:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - uses: actions/checkout@v4

    # Cache dependencies and Install Linux dependencies steps are removed
    # as they are now part of the Docker image.

    - name: Configure CMake
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S . build ${{ matrix.cmake_generator_flags }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_CXX_FLAGS="--coverage" \
          -DCMAKE_C_FLAGS="--coverage"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Build your program with the given configuration
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --preset default --output-on-failure

    - name: Generate coverage report
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        gcovr -r . --xml-pretty coverage.xml \
              --html coverage.html --html-details \
              --print-summary

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.build_type }}
        path: |
          ${{env.GITHUB_WORKSPACE}}/build/coverage.xml
          ${{env.GITHUB_WORKSPACE}}/build/coverage.html
